name: Build Pull Request
on: push

jobs:
    distribute_job:
      name: Share app with qa using the firebase app distribution
      runs-on: ubuntu-latest
      continue-on-error: true
      steps:

        - name: Checkout
          uses: actions/checkout@v2

        - name: Restore Cache
          uses: actions/cache@v2
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
            restore-keys: |
                ${{ runner.os }}-gradle-

        - name: Assemble
          env:
            VERSION_CODE: ${{ github.run_id }}
            VERSION_SUFFIX: ${{ github.event.inputs.input1 }}
          run: ./gradlew assembleDebug

        - name: Upload APK  #store the apk in the local
          uses: actions/upload-artifact@v2
          with:
            name: debugAPK
            path: app/build/outputs/apk/debug/**.apk

        - name: Upload to Firebase App Distribution
          uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
          with:
            appId: ${{ secrets.FIREBASE_APP_ID }}
            token: ${{ secrets.FIREBASE_TOKEN }}
            groups: qa
            file: app/build/outputs/apk/debug/app-debug.apk

    notification_job:
          needs: [distribute_job]
          name: Notify Build Status
          runs-on: ubuntu-latest
          steps:
            - uses: technote-space/workflow-conclusion-action@v1
            - uses: 8398a7/action-slack@v3
              with:
                status: ${{ env.WORKFLOW_CONCLUSION }}
                fields: commit,ref,workflow,eventName
                author_name: ${{ github.actor }}
                icon_emoji: ':robot_face:'
                username: "Pull Request Build Status"
                text: |
                  ${{ env.WORKFLOW_CONCLUSION }}:
                  https://github.com/n8ebel/GitHubActionsAutomationSandbox/actions/runs/${{ github.run_id }}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required

